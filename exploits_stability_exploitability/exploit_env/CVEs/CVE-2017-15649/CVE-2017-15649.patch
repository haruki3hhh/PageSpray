diff --git a/net/packet/af_packet.c b/net/packet/af_packet.c
index da215e5c1..5f7480394 100644
--- a/net/packet/af_packet.c
+++ b/net/packet/af_packet.c
@@ -1674,6 +1674,10 @@ static int fanout_add(struct sock *sk, u16 id, u16 type_flags)
 
 	mutex_lock(&fanout_mutex);
 
+	err = -EINVAL;
+	if (!po->running)
+		goto out;
+
 	err = -EALREADY;
 	if (po->fanout)
 		goto out;
@@ -1735,9 +1739,7 @@ static int fanout_add(struct sock *sk, u16 id, u16 type_flags)
 	}
 	err = -EINVAL;
 
-	spin_lock(&po->bind_lock);
-	if (po->running &&
-	    match->type == type &&
+	if (match->type == type &&
 	    match->prot_hook.type == po->prot_hook.type &&
 	    match->prot_hook.dev == po->prot_hook.dev) {
 		err = -ENOSPC;
@@ -1751,12 +1753,6 @@ static int fanout_add(struct sock *sk, u16 id, u16 type_flags)
 			err = 0;
 		}
 	}
-	spin_unlock(&po->bind_lock);
-
-	if (err && !refcount_read(&match->sk_ref)) {
-		list_del(&match->list);
-		kfree(match);
-	}
 
 out:
 	kfree(rollover);
@@ -3057,15 +3053,13 @@ static int packet_do_bind(struct sock *sk, const char *name, int ifindex,
 	int ret = 0;
 	bool unlisted = false;
 
+	if (po->fanout)
+		return -EINVAL;
+
 	lock_sock(sk);
 	spin_lock(&po->bind_lock);
 	rcu_read_lock();
 
-	if (po->fanout) {
-		ret = -EINVAL;
-		goto out_unlock;
-	}
-
 	if (name) {
 		dev = dev_get_by_name_rcu(sock_net(sk), name);
 		if (!dev) {
